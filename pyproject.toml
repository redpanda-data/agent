[project]
name = "redpanda-agents"
version = "0.1.0"
description = "the best way to vibe code enterprise agents"
readme = "README.md"
authors = [
    { name = "Tyler Rockwood", email = "rockwood@redpanda.com" }
]
requires-python = ">=3.13"
dependencies = [
    "aiohttp>=3.11.16",
    "grpcio>=1.71.0",
    "grpcio-health-checking>=1.71.0",
    "litellm>=1.63.14",
    "mcp>=1.5.0",
    "protobuf>=5.29.4",
    "pydantic>=2.10.6",
    "websockets>=15.0.1",
]
license = "Apache-2.0"
license-files = ["LICENSE"]

[dependency-groups]
dev = [
    "mypy",
    "ruff",
    "pytest",
    "pytest-asyncio",
    "pyright",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "grpcio-tools>=1.71.0",
    "mypy-protobuf>=3.6.0",
]
[tool.uv.workspace]
members = ["redpanda"]

[tool.uv.sources]
redpanda = { workspace = true }

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = ["proto"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
isort = { combine-as-imports = true, known-first-party = ["redpanda"] }

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/redpanda"]

[tool.ruff.lint.per-file-ignores]
"examples/**/*.py" = ["E501"]

[tool.pyright]
exclude = [
  "src/redpanda/runtime/proto/**",
  "**/__pycache__",
  "**/.*",
]
reportUnusedCallResult = false
reportExplicitAny = false
reportAny = false
reportUnknownParameterType = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
filterwarnings = [
  # https://github.com/BerriAI/litellm/pull/9372
  "ignore:.*ConfigDict.*:pydantic.PydanticDeprecatedSince20",
  # An error in litellm caching module
  "ignore:::litellm",
]


